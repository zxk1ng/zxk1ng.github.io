<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>wechat简单逆向</title>
      <link href="/posts/5324751f.html"/>
      <url>/posts/5324751f.html</url>
      
        <content type="html"><![CDATA[<h1>微信app简单逆向学习</h1><ul><li>小记：没有逆向过什么正式app，翻阅哲佬博客看到了微信逆向的实战，之前看到就望而却步了，最近没什么事情就尝试复现了一下，也只能是懂了一点却又没完全弄懂</li></ul><h2 id="vx-Log日志输出">vx Log日志输出</h2><p>像这种大型的app都会自己包装一个Log类，用于开发过程中的Log输出调式，而正式发布后都会关闭这些Log类输出，所以我们可以找到关闭log类输出的方法打开它，利于我们后面逆向分析</p><p>简单看一下反编译后的代码，发现打印输出有些是ae.x这种结构的，跟进ae类看一下。看一下里面有没有什么特殊的方法名<img src="/posts/5324751f.htm/image-20250115135240735.png" alt></p><p>看这个名字应该是控制Log开关的方法。看看哪里引用了这个函数，跟进到keep_setupXLog()方法。</p><p><img src="/posts/5324751f.htm/image-20240609144528529.png" alt="image-20240609144528529"></p><p>发现是setConsoleLogOpen()的参数控制Log的开关，而这个参数又是keep_setupXLog()的第六个参数，所以只要hook把这个参数变为true应该就可以了。选择hook keep_setupXLog()修改参数值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.xlog.app.XLogSetup&#x27;</span>);</span><br><span class="line">    clazz.<span class="property">keep_setupXLog</span>.<span class="title function_">overload</span>(<span class="string">&#x27;boolean&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.Integer&#x27;</span>, <span class="string">&#x27;java.lang.Boolean&#x27;</span>, <span class="string">&#x27;java.lang.Boolean&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">p0,p1,p2,p3,p4,p5,p6</span>) &#123;</span><br><span class="line">        <span class="variable language_">arguments</span>[<span class="number">5</span>] = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Boolean&quot;</span>).<span class="property">TRUE</span>.<span class="property">value</span>;  <span class="comment">//修改为true</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;已开启vx Log打印&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> clazz.<span class="property">keep_setupXLog</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);   <span class="comment">//运行函数(参数被修改后的)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改后我尝试使用Android Studio的Logcat看看有没有输出发现没有输出，看哲佬笔记发现了Log缓存目录啥的打开时乱码也没有管，但是这个对后面的分析没有太大的影响，这里就理解理解一下思路吧。</p><h2 id="vx发送消息">vx发送消息</h2><h3 id="分析">分析</h3><p>这种思路就是定位关键方法位置，这里采用DDMS记录一下点击消息框“发送”按钮后方法的调用栈。</p><p>打开DDMS，选中进程，然后点击Start Method Profiling进行跟踪记录。</p><p>同时测试机点击发送按钮，然后关闭跟踪记录<br><img src="/posts/5324751f.htm/image-20240609145348157.png" alt="image-20240609145348157"></p><p>然后会出现如下窗口</p><p><img src="/posts/5324751f.htm/image-20240609145650911.png" alt="image-20240609145650911"></p><p>搜索一下onClick方法就可以，不知道为什么我这DDMS不能方法搜索(感觉自己前期环境配置的真的烂)</p><p>定位到 <strong>com.tencent.mm.pluginsdk.ui.chat.ChatFooter$7</strong></p><p>然后gda看一下这个类下的代码</p><p><img src="/posts/5324751f.htm/image-20240609150036985.png" alt="image-20240609150036985"></p><p>这里挺明显的，“empty message cant be sent”,而上面是判断str是否空，所以猜测str就是用户输入的消息，hook一下有str作为参数的方法，打印一下参数应该就可以了(这里可以hook的方法不唯一，都可以实现)</p><p>这里hook这个方法</p><p><img src="/posts/5324751f.htm/image-20240609150443141.png" alt="image-20240609150443141"></p><p>hook代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//console.log(&quot;aaa&quot;);</span></span><br><span class="line">    <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.pluginsdk.ui.chat.ChatFooter&#x27;</span>);</span><br><span class="line">    clazz.<span class="property">a</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.pluginsdk.ui.chat.ChatFooter&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Send Message&quot;</span>,<span class="variable language_">arguments</span>[<span class="number">1</span>]); </span><br><span class="line">        <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/posts/5324751f.htm/image-20240609150547432.png" alt="image-20240609150547432"></p><h2 id="修改vx消息内容">修改vx消息内容</h2><h3 id="定位">定位</h3><p>还是首先定位关键方法，这里使用ddms自带的ui识别工具(ui识别的工具我是真的用都用不了)，说一下大致方法</p><p>测试机打开到与用户聊天界面，使用<code>Dump View Hierarchy for UI Automator</code>来定位发送的消息的控件ID</p><p>控件ID格式为<code>com.tencent.mm:id/al9</code>，然后使用命令行<code>adb shell dumpsys activity top</code>列出当前界面的各种activity类(界面还是与用户聊天界面)，然后搜索控件id就会精准定位到一个类</p><p><img src="/posts/5324751f.htm/image-20240609151254311.png" alt="image-20240609151254311"></p><p>gda跟进进行分析 <code>com.tencent.mm.ui.chatting.view.MMChattingListView</code></p><h3 id="分析-2">分析</h3><p>翻一下就会找到setAdapter方法(逆向这种业务app感觉真的吃开发功底，而自己不咋懂开发…)</p><p><img src="/posts/5324751f.htm/image-20240609151535307.png" alt="image-20240609151535307"></p><p>看了哲佬的Android笔记发现这里可能就是给ListView设置了一个适配器，而this.LNy就是Adapter，类型为BaseAdapter。交叉引用看看哪里使用了setAdapter方法，发现fTJ方法</p><p><img src="/posts/5324751f.htm/image-20240609153639603.png" alt="image-20240609153639603"></p><p>Lrn是适配器，类型为com.tencent.mm.ui.chatting.a.a；</p><p>Lrr是ListView，类型为MMChattingListView</p><p>Lrn是a类型，跟进这个com.tencent.mm.ui.chatting.a.a类看看，这个类应该是对adapter的编写实现啥的。</p><p>找到编写adapter中关键的几个方法，如getCount</p><p><img src="/posts/5324751f.htm/image-20240609154016621.png" alt="image-20240609154016621"></p><p>根据一般getCount实现的编写，可以知道LtF是数据源。</p><p>我们可以调用<code>getCount()</code>方法和<code>getItem()</code>获取到数据源的单个数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">adapter</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.ui.chatting.ChattingUIFragment&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">zt</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this.Lrn.value&quot;</span>,<span class="variable language_">this</span>.<span class="property">Lrn</span>.<span class="property">value</span>); <span class="comment">//获得Lrn的值 Lrn是 适配器</span></span><br><span class="line">            <span class="comment">//创建适配器对象，操作getCount  getItem</span></span><br><span class="line">            <span class="keyword">var</span> adapter = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">this</span>.<span class="property">Lrn</span>.<span class="property">value</span>,<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.ui.chatting.a.a&quot;</span>))</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;adapter&quot;</span>,adapter);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;adapter.getCount&quot;</span>,adapter.<span class="title function_">getCount</span>());</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;LtF&quot;</span>,adapter.<span class="property">LtF</span>.<span class="property">value</span>);  <span class="comment">//LtF是数据源</span></span><br><span class="line">            <span class="keyword">var</span> adapter_size = adapter.<span class="title function_">getCount</span>(); <span class="comment">//数据数量</span></span><br><span class="line">            <span class="keyword">var</span> msg = adapter.<span class="title function_">getItem</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;msg&quot;</span>,msg);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">zt</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">Lrn</span>.<span class="property">value</span> com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">ui</span>.<span class="property">chatting</span>.<span class="property">a</span>.<span class="property">a</span>@eb2b4e4</span><br><span class="line">adapter com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">ui</span>.<span class="property">chatting</span>.<span class="property">a</span>.<span class="property">a</span>@eb2b4e4</span><br><span class="line">adapter.<span class="property">getCount</span> <span class="number">17</span>  <span class="comment">//聊天框有17条消息</span></span><br><span class="line"><span class="title class_">LtF</span> &#123;<span class="number">0</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@21a6784, <span class="number">1</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@4e07b6d, <span class="number">2</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@c7df3a2, <span class="number">3</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@<span class="number">3284833</span>, <span class="number">4</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@89877f0, <span class="number">5</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@<span class="number">1166169</span>, <span class="number">6</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@86ba7ee, <span class="number">7</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@315348f, <span class="number">8</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@ba5231c, <span class="number">9</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@9aaab25, <span class="number">10</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@16e54fa, <span class="number">11</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@d3a8aab, <span class="number">12</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@36f5508, <span class="number">13</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@e7fd4a1, <span class="number">14</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@4bcc6c6, <span class="number">15</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@c152687, <span class="number">16</span>=com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@a28b9b4&#125;</span><br><span class="line">msg com.<span class="property">tencent</span>.<span class="property">mm</span>.<span class="property">storage</span>.<span class="property">bz</span>@21a6784  <span class="comment">//数据源中第一个消息</span></span><br></pre></td></tr></table></figure><p>可以知道每个数据都是<code>com.tencent.mm.storage.bz</code>类型的。</p><p>com.tencent.mm.storage.bz类继承 com.tencent.mm.ah.aa类</p><p>com.tencent.mm.ah.aa类继承com.tencent.mm.g.c.ej类</p><p>com.tencent.mm.g.c.ej类继承com.tencent.mm.sdk.e.c类</p><p>发现ej类中有个属性为field_content，猜测他是存放消息内容</p><h3 id="hook修改消息内容">hook修改消息内容</h3><p>这里选择hook notifyDataSetChanged()方法可以修改消息内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_notifyDataSetChanged</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.ui.chatting.a.a&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">notifyDataSetChanged</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;notifyDataSetChanged&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">LtF</span>.<span class="property">value</span>;</span><br><span class="line">            <span class="comment">//console.log(&quot;Ltf&quot;,data);</span></span><br><span class="line">            <span class="keyword">var</span> data_size = data.<span class="title function_">size</span>();  <span class="comment">//数据源数量</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;data_size&quot;</span>,data_size);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;data_size;++i)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Message&quot;</span>+i,<span class="title class_">Java</span>.<span class="title function_">cast</span>(data.<span class="title function_">get</span>(i),<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.storage.bz&quot;</span>)).<span class="property">field_content</span>.<span class="property">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">cast</span>(data.<span class="title function_">get</span>(<span class="number">5</span>),<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.storage.bz&quot;</span>)).<span class="property">field_content</span>.<span class="property">value</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>).$new(<span class="string">&quot;你要修改的内容&quot;</span>);</span><br><span class="line">             <span class="keyword">return</span> clazz.<span class="property">notifyDataSetChanged</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="VX投骰子">VX投骰子</h2><h3 id="定位-2">定位</h3><p>同样 方法和上面定位消息发送一样</p><p>点击事件为<code>com.tencent.mm.emoji.panel.a.q$1.onClick()</code></p><h3 id="分析-3">分析</h3><p><img src="/posts/5324751f.htm/image-20240609161000551.png" alt="image-20240609161000551"></p><p>跟进&quot;glG.a&quot;方法，即<code>com.tencent.mm.emoji.panel.a.d.a()</code></p><p><img src="/posts/5324751f.htm/image-20240609161502165.png" alt="image-20240609161502165"></p><p>发现有个switch，那就hook一下这个值是多少，向下会执行哪个case语句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> clazz=<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.emoji.panel.a.d&quot;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.view.View&#x27;</span>, <span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;com.tencent.mm.emoji.a.b.ac&#x27;</span>).<span class="property">implementation</span>=<span class="keyword">function</span>(<span class="params">a,b,c,d</span>)&#123;        </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">3</span>].<span class="property">type</span>.<span class="property">value</span>); <span class="comment">//0</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">//返回值为0，所以执行case 0</span></span><br></pre></td></tr></table></figure><p>再看一下ggJ1.getGroup()值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_getGroup</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">EmojiInfo</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.storage.emotion.EmojiInfo&quot;</span>);</span><br><span class="line">    <span class="title class_">EmojiInfo</span>[<span class="string">&quot;getGroup&quot;</span>].<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`EmojiInfo.getGroup is called`</span>);</span><br><span class="line">    <span class="keyword">let</span> result = <span class="variable language_">this</span>[<span class="string">&quot;getGroup&quot;</span>]();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`EmojiInfo.getGroup result=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">EmojiGroupInfo</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.storage.emotion.EmojiGroupInfo&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Qbd</span> = <span class="title class_">EmojiGroupInfo</span>.<span class="property">Qbd</span>.<span class="property">value</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Qbd is called&quot;</span>,<span class="title class_">Qbd</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试发现  EmojiGroupInfo.Qbd==18 </span></span><br><span class="line"><span class="comment">//当骰子，石头剪刀布时,EmojiInfo.getGroup为18，自定义表情EmojiInfo.getGroup为81</span></span><br></pre></td></tr></table></figure><p>那就<code>ggJ1.getGroup() == EmojiGroupInfo.Qbd</code>成立继续向下分析有一个“getProvider().p(emojiInfo3)“</p><p>jadx双击这个函数发现他还没有进行函数体实现，应该在别的地方覆写实现了。看看哪里引用了这个方法</p><p>找到<code>com.tencent.mm.ca.a.p()</code>和<code>com.tencent.mm.plugin.emoji.e.f.p()</code></p><p>因为com.tencent.mm.ca.a.p()先执行，所以先跟进这个看一看。</p><p><img src="/posts/5324751f.htm/image-20240609164449481.png" alt="image-20240609164449481"></p><p>发现调用了一个p方法  应该就是<code>com.tencent.mm.plugin.emoji.e.f.p()</code>，那就跟进这个看一看</p><p><img src="/posts/5324751f.htm/image-20240609164548935.png" alt="image-20240609164548935"></p><p>看到了 if条件语句中有<code>EmojiGroupInfo.Qbd</code>应该是在判断你发送的表情包是自定义还是骰子，石头剪刀布。</p><p>不出意外应该会执行到</p><p><img src="/posts/5324751f.htm/image-20240609164915361.png" alt="image-20240609164915361"></p><p>(hh，这里有看开发知识了。。。)</p><p>Cursor是数据库游标，aec来具体查询内容。moveToPosition()是aec移动到指定位置。jE就是个int值应该。<a href="http://xn--bu-uu2csb8068a.jE">看一下bu.jE</a>()方法。i=aec.getCount() - 1，i2=0</p><p><img src="/posts/5324751f.htm/image-20240609165155541.png" alt="image-20240609165155541"></p><p>有一个nextInt(n)取随机值，取值范围[0,n)，这里是[0,aec.getCount() - 1]。</p><p>尝试hook一下这个jE方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_jE</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> bo = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.sdk.platformtools.bu&#x27;</span>);</span><br><span class="line">    bo.<span class="property">jE</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span>=<span class="keyword">function</span>(<span class="params">a1,a2</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hook ii start&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a1:&quot;</span>+a1);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a2:&quot;</span>+a2);</span><br><span class="line">        <span class="keyword">var</span> rtn= <span class="variable language_">this</span>.<span class="title function_">jE</span>(<span class="number">5</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;rtn:&quot;</span>+rtn);</span><br><span class="line">        <span class="comment">//打印调用栈</span></span><br><span class="line">        <span class="keyword">var</span> threadef = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;java.lang.Thread&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> threadinstance = threadef.$new();</span><br><span class="line">        <span class="keyword">var</span> stack = threadinstance.<span class="title function_">currentThread</span>().<span class="title function_">getStackTrace</span>();</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">Where</span>(<span class="params">stack</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; stack.<span class="property">length</span>; ++i)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(stack[i].<span class="title function_">toString</span>());</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Full call stack:&quot;</span> + <span class="title class_">Where</span>(stack));</span><br><span class="line">        <span class="keyword">return</span> rtn</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过多次测试知道，如果是骰子，i=5,i2=0，如果是石头剪刀布i=2,i2=0，所以当骰子时getCount()==6，石头剪刀布getCount()==3。并且<strong>骰子结果是jE返回值+1</strong>，<strong>剪刀石头布分别对应着0 1 2</strong></p><h3 id="hook修改骰子-石头剪刀布">hook修改骰子/石头剪刀布</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">saizi</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.sdk.platformtools.bu&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">jE</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="variable language_">arguments</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bu.jE arguments&quot;</span>+i,<span class="variable language_">arguments</span>[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> result = clazz.<span class="property">jE</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>]==<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;石头剪刀布结果为:&quot;</span>,result==<span class="number">0</span>?<span class="string">&quot;剪刀&quot;</span>:result==<span class="number">1</span>?<span class="string">&quot;石头&quot;</span>:<span class="string">&quot;布&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;骰子点数为:&quot;</span>,result+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 进行修改</span></span><br><span class="line">            result = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Integer&quot;</span>).<span class="built_in">parseInt</span>(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vx防撤回">vx防撤回</h2><h3 id="定位-3">定位</h3><p>这里可以搜索关键字来进行定位，搜索关键字符串&quot;revoke&quot;，定位到类<code>com.tencent.mm.plugin.msgquote.PluginMsgQuote.handleRevokeMsgBySvrId</code></p><h3 id="分析-4">分析</h3><p>来到方法<code>handleRevokeMsgBySvrId</code>看名字发现这样是个处理撤回消息的方法，那看看哪里调用了这个方法。</p><p>可以打印这个方法的调用栈</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">showstacks_handleRevokeMsgBySvrId</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.msgquote.PluginMsgQuote&#x27;</span>);</span><br><span class="line">    clazz.<span class="property">handleRevokeMsgBySvrId</span>.<span class="property">implementation</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> threadef = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;java.lang.Thread&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> threadinstance = threadef.$new();</span><br><span class="line">        <span class="keyword">var</span> stack = threadinstance.<span class="title function_">currentThread</span>().<span class="title function_">getStackTrace</span>();</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">Where</span>(<span class="params">stack</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; stack.<span class="property">length</span>; ++i)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(stack[i].<span class="title function_">toString</span>());</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Full call stack:&quot;</span> + <span class="title class_">Where</span>(stack));    </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果如下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.msgquote</span><span class="selector-class">.PluginMsgQuote</span><span class="selector-class">.handleRevokeMsgBySvrId</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(SourceFile:<span class="number">2190</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.ch</span><span class="selector-class">.b</span>(SourceFile:<span class="number">258</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.s</span><span class="selector-class">.b</span><span class="selector-class">.b</span>(SourceFile:<span class="number">40</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.processAddMsg</span>(SourceFile:<span class="number">165</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(SourceFile:<span class="number">1059</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(SourceFile:<span class="number">118</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.zero</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(SourceFile:<span class="number">57</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.modelmulti</span>.q<span class="variable">$a</span>$<span class="number">1</span><span class="selector-class">.onTimerExpired</span>(SourceFile:<span class="number">830</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span><span class="selector-class">.aw</span><span class="selector-class">.handleMessage</span>(SourceFile:<span class="number">86</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span>.aq$<span class="number">2</span><span class="selector-class">.handleMessage</span>(SourceFile:<span class="number">362</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.Handler</span><span class="selector-class">.dispatchMessage</span>(Handler<span class="selector-class">.java</span>:<span class="number">106</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span>.aq$<span class="number">2</span><span class="selector-class">.dispatchMessage</span>(SourceFile:<span class="number">350</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.Looper</span><span class="selector-class">.loop</span>(Looper<span class="selector-class">.java</span>:<span class="number">193</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.HandlerThread</span><span class="selector-class">.run</span>(HandlerThread<span class="selector-class">.java</span>:<span class="number">65</span>)</span><br></pre></td></tr></table></figure><p>然后写出如下脚本(猜测应该是发送消息和撤回消息经过的调用栈会有所区别，这里区分哪里是处理撤回消息的方法)</p><p>下面 代码功能就是打印上面可能调用的方法的参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">revoke</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.msgquote.PluginMsgQuote&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">handleRevokeMsgBySvrId</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;8 handleRevokeMsgBySvrId&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">handleRevokeMsgBySvrId</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.model.f&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;7 f.a()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.model.ch&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;6 ch.b()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.s.b&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;5 b.b()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.messenger.foundation.c&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">processAddMsg</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;4 c.processAddMsg()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">processAddMsg</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.messenger.foundation.c&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;3 c.a()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.messenger.foundation.f&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;2 f.a()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.plugin.zero.c&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;1 c.a()&quot;</span>, log_str);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现对方撤回消息打印如下信息：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>c.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@<span class="number">83</span>a5410 [<span class="number">1</span>]false</span><br><span class="line"><span class="symbol">2 </span>f.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@<span class="number">83</span>a5410 [<span class="number">1</span>][object Object] [<span class="number">2</span>]false</span><br><span class="line"><span class="symbol">3 </span>c.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@<span class="number">83</span>a5410 [<span class="number">1</span>][object Object] [<span class="number">2</span>]false [<span class="number">3</span>][object Object]</span><br><span class="line"><span class="symbol">4 </span>c.processAddMsg() arguments: [<span class="number">0</span>]AddMsgInfo(<span class="number">181590793</span>), <span class="keyword">get</span>[false], fault[false], up[false] fixTime[<span class="number">0</span>] [<span class="number">1</span>][object Object]</span><br><span class="line"><span class="symbol">5 </span>b.b() arguments: [<span class="number">0</span>]AddMsgInfo(<span class="number">181590793</span>), <span class="keyword">get</span>[false], fault[false], up[false] fixTime[<span class="number">0</span>]</span><br><span class="line"><span class="symbol">6 </span>ch.b() arguments: [<span class="number">0</span>]AddMsgInfo(<span class="number">181590793</span>), <span class="keyword">get</span>[false], fault[false], up[false] fixTime[<span class="number">0</span>]</span><br><span class="line"><span class="symbol">7 </span>f.a() arguments: [<span class="number">0</span>]revokemsg [<span class="number">1</span>][object Object] [<span class="number">2</span>]AddMsgInfo(<span class="number">181590793</span>), <span class="keyword">get</span>[false], fault[false], up[false] fixTime[<span class="number">0</span>]</span><br><span class="line"><span class="symbol">8 </span>handleRevokeMsgBySvrId arguments: [<span class="number">0</span>]<span class="number">3286380964546034700</span></span><br></pre></td></tr></table></figure><p>对方发送消息打印如下信息：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>c.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@df09a3a [<span class="number">1</span>]false</span><br><span class="line"><span class="symbol">2 </span>f.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@df09a3a [<span class="number">1</span>][object Object] [<span class="number">2</span>]false</span><br><span class="line"><span class="symbol">3 </span>c.a() arguments: [<span class="number">0</span>]<span class="keyword">com</span>.tencent.mm.protocal.protobuf.aaf@df09a3a [<span class="number">1</span>][object Object] [<span class="number">2</span>]false [<span class="number">3</span>][object Object]        </span><br><span class="line"><span class="symbol">4 </span>c.processAddMsg() arguments: [<span class="number">0</span>]AddMsgInfo(<span class="number">21726955</span>), <span class="keyword">get</span>[false], fault[false], up[false] fixTime[<span class="number">0</span>] [<span class="number">1</span>][object Object]</span><br></pre></td></tr></table></figure><p>发现确实有所区别，从processAddMsg()方法开始就不一样了，所以processAddMsg()方法算是一个关键，如果判断是撤回消息继续向下面执行，如果不是撤回消息就停在processAddMsg()方法了，跟进这个方法看看内容。</p><p><code>com.tencent.mm.plugin.messenger.foundation.c.processAddMsg</code>，按照上面打印的调用栈，下面可能会执行到<code>com.tencent.mm.s.b.b</code>方法，所以在processAddMsg()方法中找到如下位置：</p><p><img src="/posts/5324751f.htm/image-20240611155113284.png" alt="image-20240611155113284"></p><p>发现是否进入下一个方法com.tencent.mm.s.b.b关键是bk值，而bk值好像是受到</p><p>**com.tencent.mm.ak.e bK = e.d.bK(Integer.valueOf(cvVar.vkP))**影响，这里可以关注一下cvVar.vkP值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">revoke_vkp</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;com.tencent.mm.protocal.protobuf.cv&quot;</span>,&#123;</span><br><span class="line">            <span class="attr">onMatch</span>:<span class="keyword">function</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> vkP = obj.<span class="property">vkP</span>.<span class="property">value</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(vkP);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">onComplete</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对方发送消息 值为1</span></span><br><span class="line"><span class="comment">//对方撤回消息 值为10002</span></span><br></pre></td></tr></table></figure><p>所以猜测根据这个值来判断是否是撤回消息，是否要进入com.tencent.mm.s.b.b进行进一步处理。</p><p>因为要处理防撤回操作，所以进入<code>com.tencent.mm.s.b.b</code></p><p><img src="/posts/5324751f.htm/image-20240611160534331.png" alt="image-20240611160534331"></p><p>这里有个神奇的地方，因为<code>com.tencent.mm.s.b.b</code>方法之后都是处理撤回消息的函数操作，把这里直接返回空是不是就不能执行撤回消息的操作了…</p><p>代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hook com.tencent.mm.s.b.b 实现返回空 则不会执行后序的撤回操作</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hook_bb</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> clazz=<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.s.b&quot;</span>);</span><br><span class="line">        clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="property">implementation</span>=<span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试发现对方确实不能撤回消息了 但是没有撤回提示 xxx撤回一条消息</span></span><br></pre></td></tr></table></figure><p>进入下一个方法看看</p><p><code>com.tencent.mm.model.ch.b</code></p><p><img src="/posts/5324751f.htm/image-20240611161159927.png" alt="image-20240611161159927"></p><p>发现这里又对vkP进行了switch判断，vkP==10002,所以这里主要执行case 10002；</p><p><img src="/posts/5324751f.htm/image-20240611162654619.png" alt="image-20240611162654619"></p><p>发现主要是对a2内容进行判断操作。a2=cvVar.GYI.IYz，这里就json化输出cvVar.GYI，然后cvVar.GYI作为参数调用了这个方法</p><p><img src="/posts/5324751f.htm/image-20240611164521216.png" alt="image-20240611164521216"></p><p>可以打印一下deoVar.ITz看看内容，因为case 10002都是对其内容进行判断操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改撤回提示消息 打印json输出</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">revoke_msg</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&quot;/data/local/tmp/r0gson.dex&quot;</span>).<span class="title function_">load</span>();</span><br><span class="line">        <span class="keyword">const</span> gson = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.r0ysue.gson.Gson&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.model.ch&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> log_str = <span class="string">&quot;arguments:&quot;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                log_str += <span class="string">&quot; [&quot;</span> + i + <span class="string">&quot;]&quot;</span> + <span class="variable language_">arguments</span>[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;====================&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> v0 = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>].<span class="property">gpg</span>.<span class="property">value</span>, <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.protocal.protobuf.cv&quot;</span>));</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(gson.$new().<span class="title function_">toJson</span>(v0)); <span class="comment">//json化输出 GYI</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">var</span> revoke_xml_obj = <span class="title class_">Java</span>.<span class="title function_">cast</span>(v0.<span class="property">GYI</span>.<span class="property">value</span>, <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.protocal.protobuf.deo&quot;</span>));</span><br><span class="line">  </span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(revoke_xml_obj.<span class="property">IYz</span>.<span class="property">value</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;====================&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;6 ch.b()&quot;</span>, log_str);</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印内容如下：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;CreateTime&quot;</span>:<span class="number">1718094764</span>,</span><br><span class="line"><span class="string">&quot;GYG&quot;</span>:&#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;wxid_0wk809ov49tq22&quot;</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;GYH&quot;</span>:&#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;wxid_5yg9b4aw7fo422&quot;</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;GYI&quot;</span>:&#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;<span class="char escape_">\u</span>003csysmsg type<span class="char escape_">\u</span>003d<span class="char escape_">\&quot;</span>revokemsg<span class="char escape_">\&quot;</span><span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003crevokemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003csession<span class="char escape_">\u</span>003ewxid_0wk809ov49tq22<span class="char escape_">\u</span>003c/session<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cmsgid<span class="char escape_">\u</span>003e1632163924<span class="char escape_">\u</span>003c/msgid<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cnewmsgid<span class="char escape_">\u</span>003e5211977936516039943<span class="char escape_">\u</span>003c/newmsgid<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003creplacemsg<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c![CDATA[<span class="char escape_">\&quot;</span>G08aT<span class="char escape_">\&quot;</span> 撤回了一条消息]]<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c/replacemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003c/revokemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\u</span>003c/sysmsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span>&quot;</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;GYJ&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;GYK&quot;</span>:&#123;<span class="string">&quot;hasBuffer&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;hasILen&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;iLen&quot;</span>:<span class="number">0</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;GYL&quot;</span>:<span class="string">&quot;<span class="char escape_">\u</span>003cmsgsource<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003ctmp_node<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cpublisher-id<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c/publisher-id<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003c/tmp_node<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\u</span>003c/msgsource<span class="char escape_">\u</span>003e<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;GYN&quot;</span>:<span class="number">801938977</span>,</span><br><span class="line"><span class="string">&quot;nNf&quot;</span>:<span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;vkP&quot;</span>:<span class="number">10002</span>,</span><br><span class="line"><span class="string">&quot;ysP&quot;</span>:<span class="number">1632163925</span>,</span><br><span class="line"><span class="string">&quot;ysR&quot;</span>:<span class="number">679760550</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>:[],<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">//</span>IYz内容</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>sysmsg type<span class="operator">=</span><span class="string">&quot;revokemsg&quot;</span><span class="operator">&gt;</span></span><br><span class="line">        <span class="symbol">&lt;revokemsg&gt;</span></span><br><span class="line">                <span class="symbol">&lt;session&gt;</span>wxid_0wk809ov49tq22<span class="operator">&lt;</span><span class="operator">/</span>session<span class="operator">&gt;</span></span><br><span class="line">                <span class="symbol">&lt;msgid&gt;</span><span class="number">1632163924</span><span class="operator">&lt;</span><span class="operator">/</span>msgid<span class="operator">&gt;</span></span><br><span class="line">                <span class="symbol">&lt;newmsgid&gt;</span><span class="number">5211977936516039943</span><span class="operator">&lt;</span><span class="operator">/</span>newmsgid<span class="operator">&gt;</span></span><br><span class="line">                <span class="symbol">&lt;replacemsg&gt;</span><span class="operator">&lt;</span><span class="operator">!</span>[CDATA[<span class="string">&quot;G08aT&quot;</span> 撤回了一条消息]]<span class="operator">&gt;</span><span class="operator">&lt;</span><span class="operator">/</span>replacemsg<span class="operator">&gt;</span></span><br><span class="line">        <span class="operator">&lt;</span><span class="operator">/</span>revokemsg<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span><span class="operator">/</span>sysmsg<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>这里就可以修改一下撤回消息提示的提示内容，把<replacemsg>内容替换一下</replacemsg></p><p>代码如下</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">revoke_msg</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&quot;/data/local/tmp/r0gson.dex&quot;</span>).<span class="title function_">load</span>();</span><br><span class="line">        <span class="keyword">const</span> gson = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.r0ysue.gson.Gson&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.model.ch&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> v0 = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>].<span class="property">gpg</span>.<span class="property">value</span>, <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.protocal.protobuf.cv&quot;</span>));</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">modify_revoke_str</span>(<span class="params">old_revoke_str</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> message = <span class="string">&quot;尝试撤回了一条消息&quot;</span>;  <span class="comment">//要替换的内容</span></span><br><span class="line">                <span class="keyword">var</span> revoke_msg = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>).$new(message);</span><br><span class="line">                <span class="keyword">var</span> sub_str = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>).$new(<span class="string">&quot;]]&gt;&lt;/replacemsg&gt;&quot;</span>)</span><br><span class="line">                <span class="keyword">var</span> index = old_revoke_str.<span class="title function_">indexOf</span>(sub_str);</span><br><span class="line">                <span class="keyword">var</span> new_revoke_str = old_revoke_str.<span class="title function_">substring</span>(<span class="number">0</span>, index - <span class="number">7</span>) + revoke_msg + old_revoke_str.<span class="title function_">substring</span>(index);</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>).$new(new_revoke_str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> revoke_xml_obj = <span class="title class_">Java</span>.<span class="title function_">cast</span>(v0.<span class="property">GYI</span>.<span class="property">value</span>, <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.protocal.protobuf.deo&quot;</span>));</span><br><span class="line">    </span><br><span class="line">            revoke_xml_obj.<span class="property">IYz</span>.<span class="property">value</span> = <span class="title function_">modify_revoke_str</span>(revoke_xml_obj.<span class="property">IYz</span>.<span class="property">value</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(revoke_xml_obj.<span class="property">IYz</span>.<span class="property">value</span>);</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">b</span>.<span class="title function_">overload</span>(<span class="string">&#x27;com.tencent.mm.ak.e$a&#x27;</span>).<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>手机上撤回提示也确实被修改</p><p><img src="/posts/5324751f.htm/image-20240611165936122.png" alt="image-20240611165936122"></p><p>因为聊天界面发生了改变，所以这里又回到了hook notifyDataSetChanged，json打印最后消息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">notifyDataSetChanged_json</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&quot;/data/local/tmp/r0gson.dex&quot;</span>).<span class="title function_">load</span>();</span><br><span class="line">        <span class="keyword">const</span> gson = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.r0ysue.gson.Gson&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.mm.ui.chatting.a.a&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">notifyDataSetChanged</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;notifyDataSetChanged&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">LtF</span>.<span class="property">value</span>;</span><br><span class="line">            <span class="comment">//console.log(&quot;Ltf&quot;,data);</span></span><br><span class="line">            <span class="keyword">var</span> data_size = data.<span class="title function_">size</span>();</span><br><span class="line">            <span class="comment">//console.log(&quot;data_size&quot;,data_size);</span></span><br><span class="line">            <span class="keyword">var</span> last_msg=<span class="title class_">Java</span>.<span class="title function_">cast</span>(data.<span class="title function_">get</span>(data_size-<span class="number">1</span>),<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.storage.bz&quot;</span>));</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(gson.$new().<span class="title function_">toJson</span>(last_msg));</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">notifyDataSetChanged</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现撤回消息与撤回提示，仅有<code>field_content&quot;</code>、<code>&quot;field_type&quot;</code>、<code>&quot;exe&quot;</code>字段不一样，其中正常消息的<code>field_type=1,exe=true</code>；撤回提示<code>field_type=10000,exe=false</code></p><p>被撤回消息和撤回消息的提示的<code>field_msgSvrId</code>字段是一样的，同时对应着撤回提示xml的<code>&lt;newmsgid&gt;</code>字段</p><p>尝试修改撤回提示的<code>&lt;newmsgid&gt;</code>字段，发现没有什么用。直接就变成不撤回了。</p><p>分析下一个方法：</p><p><code>com.tencent.mm.model.f.a</code>,跟进</p><p><img src="/posts/5324751f.htm/image-20240611185630564.png" alt="image-20240611185630564"></p><p><img src="/posts/5324751f.htm/image-20240611190920135.png" alt="image-20240611190920135"></p><p>参数一为字符串String，通过翻阅知道是 str = M.get(“.sysmsg.$type”)</p><ul><li>即获取的是xml中<code>sysmsg</code>的<code>type</code>属性</li><li>撤回消息就为<code>&quot;revokemsg&quot;</code></li></ul><p>参数二是一个XML内容转成的Map数组</p><p>参数三保存着原始的所有数据</p><p>打印参数代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_fa</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&#x27;/data/local/tmp/r0gson.dex&#x27;</span>).<span class="title function_">load</span>();</span><br><span class="line">        <span class="keyword">const</span> gson=<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.r0ysue.gson.Gson&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> clazz=<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.tencent.mm.model.f&quot;</span>);</span><br><span class="line">        clazz.<span class="property">a</span>.<span class="property">implementation</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arguments[0]:&quot;</span>+<span class="variable language_">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arguments[1]:&quot;</span>+gson.$new().<span class="title function_">toJson</span>(<span class="variable language_">arguments</span>[<span class="number">1</span>]));</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;===============&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;arguments[2]:&quot;</span>+gson.$new().<span class="title function_">toJson</span>(<span class="variable language_">arguments</span>[<span class="number">2</span>]));</span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">a</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>,<span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数如下</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">arguments[<span class="number">0</span>]:revokemsg  <span class="operator">//</span>撤回消息 类型就是revokemsg</span><br><span class="line"></span><br><span class="line">arguments[<span class="number">1</span>]:&#123;<span class="string">&quot;</span></span><br><span class="line"><span class="string">.sysmsg.revokemsg.newmsgid&quot;</span>:<span class="string">&quot;7006750091473010700&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg.revokemsg&quot;</span>:<span class="string">&quot;<span class="char escape_">\n</span><span class="char escape_">\t</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg.revokemsg.session&quot;</span>:<span class="string">&quot;wxid_0wk809ov49tq22&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg&quot;</span>:<span class="string">&quot;<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg.$type&quot;</span>:<span class="string">&quot;revokemsg&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg.revokemsg.replacemsg&quot;</span>:<span class="string">&quot;<span class="char escape_">\&quot;</span>G08aT<span class="char escape_">\&quot;</span> 撤回了一条消息&quot;</span>,</span><br><span class="line"><span class="string">&quot;.sysmsg.revokemsg.msgid&quot;</span>:<span class="string">&quot;1632163930&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">==</span><span class="operator">=</span></span><br><span class="line">arguments[<span class="number">2</span>]:&#123;</span><br><span class="line"><span class="string">&quot;gpg&quot;</span>:&#123;<span class="string">&quot;CreateTime&quot;</span>:<span class="number">1718103677</span>,</span><br><span class="line"><span class="string">&quot;GYG&quot;</span>:                        &#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;wxid_0wk809ov49tq22&quot;</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;GYH&quot;</span>:</span><br><span class="line">&#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;wxid_5yg9b4aw7fo422&quot;</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;GYI&quot;</span>:</span><br><span class="line">&#123;<span class="string">&quot;IYA&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;IYz&quot;</span>:<span class="string">&quot;<span class="char escape_">\u</span>003csysmsg type<span class="char escape_">\u</span>003d<span class="char escape_">\&quot;</span>revokemsg<span class="char escape_">\&quot;</span><span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003crevokemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003csession<span class="char escape_">\u</span>003ewxid_0wk809ov49tq22<span class="char escape_">\u</span>003c/session<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cmsgid<span class="char escape_">\u</span>003e1632163930<span class="char escape_">\u</span>003c/msgid<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cnewmsgid<span class="char escape_">\u</span>003e7006750091473010700<span class="char escape_">\u</span>003c/newmsgid<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003creplacemsg<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c![CDATA[<span class="char escape_">\&quot;</span>G08aT<span class="char escape_">\&quot;</span> 撤回了一条消息]]<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c/replacemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003c/revokemsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\u</span>003c/sysmsg<span class="char escape_">\u</span>003e<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;GYJ&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;GYK&quot;</span>:&#123;<span class="string">&quot;hasBuffer&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;hasILen&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;iLen&quot;</span>:<span class="number">0</span>,<span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,<span class="string">&quot;GYL&quot;</span>:<span class="string">&quot;<span class="char escape_">\u</span>003cmsgsource<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003ctmp_node<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003cpublisher-id<span class="char escape_">\u</span>003e<span class="char escape_">\u</span>003c/publisher-id<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\t</span><span class="char escape_">\u</span>003c/tmp_node<span class="char escape_">\u</span>003e<span class="char escape_">\n</span><span class="char escape_">\u</span>003c/msgsource<span class="char escape_">\u</span>003e<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;GYN&quot;</span>:<span class="number">801939133</span>,</span><br><span class="line"><span class="string">&quot;nNf&quot;</span>:<span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;vkP&quot;</span>:<span class="number">10002</span>,</span><br><span class="line"><span class="string">&quot;ysP&quot;</span>:<span class="number">1632163931</span>,</span><br><span class="line"><span class="string">&quot;ysR&quot;</span>:<span class="number">3101589936</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>:[省略...],</span><br><span class="line"><span class="string">&quot;includeUnKnownField&quot;</span>:<span class="literal">false</span>&#125;,</span><br><span class="line"><span class="string">&quot;hQb&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;hQc&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;hQd&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;hQe&quot;</span>:<span class="number">0</span>,<span class="string">&quot;hQf&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;what&quot;</span>:<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><p>发现大致也是对参数一类型进行判断，最后进行这里</p><p><img src="/posts/5324751f.htm/image-20240611191147091.png" alt="image-20240611191147091"></p><p>发现把map里的数据都进行了赋值操作。</p><p>往下看 发现下图</p><p><img src="/posts/5324751f.htm/image-20240611191500559.png" alt="image-20240611191500559"></p><p>跟进这个a方法，会发现调用了三次update()方法，最后跟到<code>updateWithOnConflict</code>方法</p><p><img src="/posts/5324751f.htm/image-20240611192549530.png" alt="image-20240611192549530"></p><p>打印一下调用栈，如下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.wcdb</span><span class="selector-class">.database</span><span class="selector-class">.SQLiteDatabase</span><span class="selector-class">.updateWithOnConflict</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.wcdb</span><span class="selector-class">.database</span><span class="selector-class">.SQLiteDatabase</span><span class="selector-class">.update</span>(SourceFile:<span class="number">1726</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.storagebase</span><span class="selector-class">.f</span><span class="selector-class">.update</span>(SourceFile:<span class="number">895</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.storagebase</span><span class="selector-class">.h</span><span class="selector-class">.update</span>(SourceFile:<span class="number">601</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.storage</span><span class="selector-class">.ca</span><span class="selector-class">.a</span>(SourceFile:<span class="number">2426</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.storage</span><span class="selector-class">.ca</span><span class="selector-class">.a</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(SourceFile:<span class="number">2187</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.ch</span><span class="selector-class">.b</span>(SourceFile:<span class="number">258</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.model</span><span class="selector-class">.ch</span><span class="selector-class">.b</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.s</span><span class="selector-class">.b</span><span class="selector-class">.b</span>(SourceFile:<span class="number">40</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.s</span><span class="selector-class">.b</span><span class="selector-class">.b</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.processAddMsg</span>(SourceFile:<span class="number">165</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.processAddMsg</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(SourceFile:<span class="number">1059</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(SourceFile:<span class="number">118</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.messenger</span><span class="selector-class">.foundation</span><span class="selector-class">.f</span><span class="selector-class">.a</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.zero</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(SourceFile:<span class="number">57</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.plugin</span><span class="selector-class">.zero</span><span class="selector-class">.c</span><span class="selector-class">.a</span>(Native Method)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.modelmulti</span>.q<span class="variable">$a</span>$<span class="number">1</span><span class="selector-class">.onTimerExpired</span>(SourceFile:<span class="number">830</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span><span class="selector-class">.aw</span><span class="selector-class">.handleMessage</span>(SourceFile:<span class="number">86</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span>.aq$<span class="number">2</span><span class="selector-class">.handleMessage</span>(SourceFile:<span class="number">362</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.Handler</span><span class="selector-class">.dispatchMessage</span>(Handler<span class="selector-class">.java</span>:<span class="number">106</span>)</span><br><span class="line">com<span class="selector-class">.tencent</span><span class="selector-class">.mm</span><span class="selector-class">.sdk</span><span class="selector-class">.platformtools</span>.aq$<span class="number">2</span><span class="selector-class">.dispatchMessage</span>(SourceFile:<span class="number">350</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.Looper</span><span class="selector-class">.loop</span>(Looper<span class="selector-class">.java</span>:<span class="number">164</span>)</span><br><span class="line">android<span class="selector-class">.os</span><span class="selector-class">.HandlerThread</span><span class="selector-class">.run</span>(HandlerThread<span class="selector-class">.java</span>:<span class="number">65</span>)</span><br></pre></td></tr></table></figure><p>其实通过上面打印notifyDataSetChanged观察也知道自己发消息撤回提示是10002，他人发消息撤回是10000</p><p><code>updateWithOnConflict()</code>方法将参数进行sql的拼接，然后使用<code>new SQLiteStatement()</code>创建<code>SQLiteStatement</code>对象，再用<code>executeUpdateDelete()</code>来执行</p><p>Frida hook一下<code>executeUpdateDelete()</code>方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook_executeUpdateDelete</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&quot;/data/local/tmp/r0gson.dex&quot;</span>).<span class="title function_">load</span>();</span><br><span class="line">        <span class="keyword">const</span> gson = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.r0ysue.gson.Gson&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">var</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.tencent.wcdb.database.SQLiteStatement&#x27;</span>);</span><br><span class="line">        clazz.<span class="property">executeUpdateDelete</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">            <span class="comment">// console.log(&quot;====================&quot;);</span></span><br><span class="line">            <span class="comment">// console.log(&quot;====================&quot;);</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;7.1.1.1 executeUpdateDelete&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;msql:&quot;</span>, <span class="variable language_">this</span>.<span class="property">mSql</span>.<span class="property">value</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Args:&quot;</span>, <span class="variable language_">this</span>.<span class="property">mBindArgs</span>.<span class="property">value</span>)</span><br><span class="line">            <span class="comment">//console.log(&quot;mDatabase:&quot;,this.mDatabase.value);</span></span><br><span class="line">            <span class="keyword">return</span> clazz.<span class="property">executeUpdateDelete</span>.<span class="title function_">overload</span>().<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>撤回消息，打印结果为</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">7</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span> executeUpdateDelete</span><br><span class="line"><span class="attribute">msql</span>: UPDATE message SET msgId=?,type=?,content=? WHERE msgId=?</span><br><span class="line"><span class="attribute">Args</span>: <span class="number">1948</span>,<span class="number">10000</span>,<span class="string">&quot;G08aT&quot;</span> 撤回了一条消息,<span class="number">1948</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">7</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span> executeUpdateDelete</span><br><span class="line"><span class="attribute">msql</span>: UPDATE rconversation SET msgType=?,flag=?,digestUser=?,digest=?,isSend=?,hasTrunc=?,unReadCount=?,conversationTime=?,content=?,username=?,status=? WHERE username=?</span><br><span class="line"><span class="attribute">Args</span>: <span class="number">10000</span>,<span class="number">1718105683000</span>,,<span class="string">&quot;G08aT&quot;</span> 撤回了一条消息:…,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1718105683000</span>,<span class="string">&quot;G08aT&quot;</span> 撤回了一条消息:…,wxid_0wk809ov49tq22,<span class="number">3</span>,wxid_0wk809ov49tq22</span><br><span class="line"></span><br><span class="line"><span class="attribute">7</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span> executeUpdateDelete</span><br><span class="line"><span class="attribute">msql</span>: UPDATE rconversation SET UnReadInvite=?,atCount=? WHERE username= ?</span><br><span class="line"><span class="attribute">Args</span>: <span class="number">0</span>,<span class="number">0</span>,wxid_0wk809ov49tq22</span><br></pre></td></tr></table></figure><p>其中的参数<code>msgId</code>是本地的消息id，只有第一条数据库操作指令是<code>WHERE msgId=?</code>的，所以这一步就是找到指定消息然后替换为撤回提示消息。</p><h3 id="xposed实现撤回提示">xposed实现撤回提示</h3><p>不知道为什么我frida打印会出现一次WHERE msgId=?，而手机中却实际出现两次。</p><p>所以哲佬的代码我的结果实现的不是很好，做很很很简单的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.example.xposed;</span><br><span class="line">//xposed全局过滤</span><br><span class="line">import android.util.Log;</span><br><span class="line">import static de.robv.android.xposed.XposedHelpers.findAndHookMethod;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">import java.lang.reflect.Modifier;</span><br><span class="line"></span><br><span class="line">import de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line">import de.robv.android.xposed.XC_MethodHook;</span><br><span class="line">import de.robv.android.xposed.XC_MethodReplacement;</span><br><span class="line">import de.robv.android.xposed.XposedBridge;</span><br><span class="line">import de.robv.android.xposed.XposedHelpers;</span><br><span class="line">import de.robv.android.xposed.callbacks.XC_LoadPackage;</span><br><span class="line">import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;</span><br><span class="line"></span><br><span class="line">public class Myhook implements IXposedHookLoadPackage &#123;</span><br><span class="line">    int cnt=1;</span><br><span class="line">    @Override</span><br><span class="line">    public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable &#123;</span><br><span class="line">        if (!&quot;com.tencent.mm&quot;.equals(lpparam.packageName)) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        final String className = &quot;com.tencent.wcdb.database.SQLiteStatement&quot;;</span><br><span class="line">        final String methodName = &quot;executeUpdateDelete&quot;;</span><br><span class="line">        Class&lt;?&gt; SDClazz = XposedHelpers.findClass(className, lpparam.classLoader);</span><br><span class="line">        XposedBridge.hookAllMethods(SDClazz, methodName, new XC_MethodHook() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            protected void beforeHookedMethod(MethodHookParam param) throws Throwable &#123;</span><br><span class="line">                super.beforeHookedMethod(param);</span><br><span class="line">                Log.d(&quot;VxHook&quot;, &quot;executeUpdateDelete&quot;);</span><br><span class="line">                Object mDatabase = XposedHelpers.getObjectField(param.thisObject, &quot;mDatabase&quot;);</span><br><span class="line">                String mSql = (String) XposedHelpers.getObjectField(param.thisObject, &quot;mSql&quot;);</span><br><span class="line">                Log.d(&quot;zxk1ng&quot;,mSql);</span><br><span class="line">                Object[] mBindArgs = (Object[]) XposedHelpers.getObjectField(param.thisObject, &quot;mBindArgs&quot;);</span><br><span class="line">                cnt+=1;</span><br><span class="line">                if ((&quot;UPDATE message SET msgId=?,type=?,content=? WHERE msgId=?&quot;.equals(mSql)) &amp;&amp; ((String) mBindArgs[2]).contains(&quot;撤回了一条消息&quot;) &amp;&amp; cnt%2==0 ) &#123;</span><br><span class="line"></span><br><span class="line">                    Object sm = XposedHelpers.newInstance(lpparam.classLoader.loadClass(&quot;com.tencent.wcdb.database.SQLiteStatement&quot;),</span><br><span class="line">                            mDatabase,</span><br><span class="line">                            &quot;select content from message where msgId = ?&quot;,</span><br><span class="line">                            new Object[]&#123;mBindArgs[3]&#125;);</span><br><span class="line">                    String msg = (String) XposedHelpers.callMethod(sm, &quot;simpleQueryForString&quot;);</span><br><span class="line">                    Log.d(&quot;zxk1ng&quot;,msg);</span><br><span class="line">                    Log.d(&quot;zxk1ng&quot;,(String) mBindArgs[2]);</span><br><span class="line">                    Log.d(&quot;zxk1ng&quot;,&quot;===================&quot;);</span><br><span class="line">                    if (!msg.contains(&quot;&lt;msg&gt;&quot;) ) &#123; //不包含时 执行</span><br><span class="line">                        mBindArgs[2] = mBindArgs[2] + &quot;:&quot; + msg;</span><br><span class="line">                        Log.d(&quot;zxk1ng&quot;,(String) mBindArgs[2]);</span><br><span class="line">                        Log.d(&quot;zxk1ng&quot;, &quot;对方撤回了：&quot; + msg);</span><br><span class="line"></span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        param.setResult(1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战 </tag>
            
            <tag> Android逆向 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
